{"version":3,"sources":["C:/Users/technode/Documents/GitHub/my-first-angular-app/src/$_gendir lazy","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.component.html","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.component.ts","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.module.ts","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/server/server.component.html","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/server/server.component.ts","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.css","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.html","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.ts","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/environments/environment.ts","C:/Users/technode/Documents/GitHub/my-first-angular-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\"></div>\\r\\n      <h3>I'm in the App component</h3>\\r\\n      <hr>\\r\\n      <!-- <app-servers></app-servers> -->\\r\\n      <!-- <div app-servers></div> -->\\r\\n      <app-servers></app-servers>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  //styleUrls: ['./app.component.css']\r\n  styles: [`\r\n    h3 {\r\n      color: dodgerblue;\r\n    }\r\n  `]\r\n})\r\nexport class AppComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ServerComponent } from './server/server.component';\nimport { ServersComponent } from './servers/servers.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ServerComponent,\r\n    ServersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/app.module.ts","module.exports = \"<p\\r\\n  [ngStyle]=\\\"{backgroundColor: getColor()}\\\"\\r\\n  [ngClass]=\\\"{online: serverStatus === 'online'}\\\">\\r\\n  {{ 'Server' }} with ID {{ serverId }} is {{ getServerStatus() }}\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/server/server.component.html\n// module id = ../../../../../src/app/server/server.component.html\n// module chunks = main","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styles : [`\r\n    .online {\r\n      color: blue;\r\n    }\r\n    `]\r\n})\r\nexport class ServerComponent{\r\n  // se si vuole anche specificare il tipo\r\n  // serverId: number = 10;\r\n  // serverStatus: string = 'offline';\r\n\r\n  serverId: number = 10;\r\n  serverStatus: string = 'offline';\r\n\r\n  constructor(){\r\n    this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline'\r\n  }\r\n\r\n  getServerStatus() {\r\n    return this.serverStatus;\r\n  }\r\n\r\n  getColor (){\r\n    return this.serverStatus === 'online' ? 'green' : 'red';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/server/server.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.css\n// module id = ../../../../../src/app/servers/servers.component.css\n// module chunks = main","module.exports = \"<label>Server Name</label>\\n<!-- <input\\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  (input)=\\\"onUpdateServerName($event)\\\"> -->\\n  <input\\n    type=\\\"text\\\"\\n    class=\\\"form-control\\\"\\n    [(ngModel)]=\\\"serverName\\\">\\n<button\\n  class=\\\"btn btn-primary\\\"\\n  [disabled]=\\\"!allowNewServer\\\"\\n  (click)=\\\"onCreateServer()\\\">Add Server</button>\\n<!-- <p [innerText]=\\\"allowNewServer\\\"></p> -->\\n<!-- <p>{{ serverCreationStatus }}</p> -->\\n<p *ngIf=\\\"serverCreated\\\">Server was created, server is {{serverName}}</p>\\n<!-- <p *ngIf=\\\"serverCreated; else noServer\\\">Server was created, server is {{serverName}}</p>\\n<ng-template #noServer>\\n  <p>\\n    No server was created!\\n  </p>\\n</ng-template> -->\\n<app-server *ngFor=\\\"let server of servers\\\"></app-server>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.html\n// module id = ../../../../../src/app/servers/servers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  // selector: '[app-servers]',\n  // selector: '.app-servers',\n  templateUrl: './servers.component.html',\n  // template: `\n  //   <app-server></app-server>\n  //   <app-server></app-server>`,\n  //template: '<app-server></app-server><app-server></app-server>',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = \"No server was created!\";\n  serverName = '';\n  serverCreated = false;\n  servers = ['Testserver', 'Testserver 2'];\n\n  constructor() {\n    setTimeout(() => {\n      this.allowNewServer = true;\n    },2000);\n  }\n\n  ngOnInit() {\n  }\n\n  onCreateServer() {\n    this.serverCreated = true;\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = `Server ${this.serverName} was created`;\n  }\n  // onUpdateServerName(event:any){\n  //   this.serverName = event.target.value;\n  // }\n  onUpdateServerName(event:Event){\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/app/servers/servers.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/technode/Documents/GitHub/my-first-angular-app/src/main.ts"],"sourceRoot":"webpack:///"}